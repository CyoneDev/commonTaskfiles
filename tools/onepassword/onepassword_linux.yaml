version: '3'

tasks:
  deps: [check-token-exists] # its better if OP_SERVICE_ACCOUNT_TOKEN is set before the op-cli install because opcli prompts for it
  install:
    cmds:
      - |
        if command -v dnf &> /dev/null; then
          sudo rpm --import https://downloads.1password.com/linux/keys/1password.asc
          sudo sh -c 'echo -e "[1password]\nname=1Password Stable Channel\nbaseurl=https://downloads.1password.com/linux/rpm/stable/\$basearch\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=\"https://downloads.1password.com/linux/keys/1password.asc\"" > /etc/yum.repos.d/1password.repo'
          sudo dnf check-update -y 1password-cli && sudo dnf install 1password-cli
        elif command -v apt &> /dev/null; then
          sudo -s \
          sudo curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" | \
          sudo tee /etc/apt/sources.list.d/1password.list
          sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
          sudo curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | \
          sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
          sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
          sudo curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
          sudo apt update && sudo apt install 1password-cli
        else
          echo "Unsupported distribution"
          exit 1
        fi
    silent: true
    status: 
      - command -v op

  check-token-exists:
    silent: true
    internal: true
    preconditions:
      - sh: '[[ ! -z "$OP_SERVICE_ACCOUNT_TOKEN" ]]'
        msg: "OP_SERVICE_ACCOUNT_TOKEN is not set. Please set it in your environment variables."
  
  check-token-valid:
    deps: [check-token-exists]
    silent: true
    preconditions:
      - sh: 'op whoami'
        msg: 'Token is invalid. Please check the "OP_SERVICE_ACCOUNT_TOKEN" environment variable to ensure its valid.'

  inject-secrets:
    desc: "Inject templates in the given directory"
    internal: true
    cmds:
      - |
        DIR="{{.DIR}}"
        for tplFile in "$DIR"/*.tpl; do
          outputFile="${tplFile%.tpl}"
          op inject -i "$tplFile" -o "$outputFile" --force
        done
    silent: true
    vars:
      DIR: "{{.DIR}}" #

  set-token:
    internal: false
    desc: "Set the 1Password token by having the user login through azure to prove they're an active and approved employee"
    vars: 
      Required: [AZ_SUBSCRIPTION_ID, AKV_SECRET_NAME, AKV_VAULT_NAME]
    cmds:
      - pwsh -c '$(Invoke-RestMethod -Uri https://raw.githubusercontent.com/CyoneDev/commonTaskfiles/main/tools/onepassword/onepassword_token.ps1 | Out-File /tmp/onepassword_token.ps1 -force); . /tmp/onepassword_token.ps1 -akvSecretName {{.akvSecretName}} -akvVaultName {{.akvVaultName}} -AZ_SUBSCRIPTION_ID {{.AZ_SUBSCRIPTION_ID}}'
      - . ~/.bashrc
    status: 
      - '[[ ! -z "$OP_SERVICE_ACCOUNT_TOKEN" ]]'
      - op whoami